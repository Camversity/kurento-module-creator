cpp/${remoteClass.name}.hpp
/* Autogenerated with Kurento Idl */

#ifndef __${remoteClass.name}__
#define __${remoteClass.name}__

#include <jsoncpp/json/json.h>

<#list model.getComplexTypes() as object><#rt>
#include "${object.name}.hpp"
</#list>
<#list model.getRemoteClasses() as object><#rt>
#include "${object.name}.hpp"
</#list>
<#list model.getEvents() as object><#rt>
#include "${object.name}.hpp"
</#list>

class ${remoteClass.name} <#if remoteClass.extends??>: ${remoteClass.extends.name}</#if> {

public:

  ${remoteClass.name} (/* TODO: Constructor params */);
  virtual ~${remoteClass.name} ();

  <#list remoteClass.methods as method><#rt>
  ${getCppObjectType(method.return,false)} ${method.name} (<#rt>
      <#lt><#list method.params as param>${getCppObjectType(param.type.name)} ${param.name}<#if param_has_next>, </#if></#list>);
  </#list>

  <#if !remoteClass.abstract>
  class ${remoteClass.name}Builder <#if remoteClass.extends??>: ${remoteClass.extends.name}Builder </#if>{

    static ${getCppObjectType(remoteClass.name,false)} createObject (Json::Value params);
  }
  </#if>
}

#endif /*  __${remoteClass.name}__ */
