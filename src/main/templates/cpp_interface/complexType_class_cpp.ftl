${complexType.name}.cpp
/* Autogenerated with Kurento Idl */

<#list complexType.getChildren() as dependency>
<#if model.remoteClasses?seq_contains(dependency.type.type) ||
  model.complexTypes?seq_contains(dependency.type.type) ||
  model.events?seq_contains(dependency.type.type)>
#include "${dependency.type.name}.hpp"
</#if>
</#list>
#include "${complexType.name}.hpp"
#include <jsonrpc/JsonSerializer.hpp>
#include <KurentoException.hpp>

namespace kurento
{
<#if complexType.typeFormat == "ENUM">

${complexType.name}::type ${complexType.name}::getValueFromString (const std::string &value)
{

  <#list complexType.values as value>
  if (value ==  "${value}") {
    return ${value};
  }

  </#list>
  throw KurentoException (MARSHALL_ERROR,
                          "Invalid value for '${complexType.name}'");

}
</#if>

void ${complexType.name}::Serialize (JsonSerializer &s)
{
<#if complexType.typeFormat == "REGISTER">
  if (s.IsWriter) {
  <#list complexType.properties as property>
    <#if property.optional>
    if (__isSet${property.name?cap_first}) {
      s.SerializeNVP (${property.name});
    }

    <#else>
    s.SerializeNVP (${property.name});

    </#if>
  </#list>
  } else {
  <#list complexType.properties as property>
    <#assign jsonData = getJsonCppTypeData(property.type)>
    <#if property.optional>
    if (s.JsonValue.isMember ("${property.name}") ) {
      if (s.JsonValue["${property.name}"].isConvertibleTo (Json::ValueType::${jsonData.getJsonValueType()}) ) {
        __isSet${property.name?cap_first} = true;
        s.SerializeNVP (${property.name});
      } else {
        throw KurentoException (MARSHALL_ERROR,
                                "'${property.name}' property should be a ${jsonData.getTypeDescription()}");
      }
    }

    <#else>
    if (!s.JsonValue.isMember ("${property.name}") || !s.JsonValue["${property.name}"].isConvertibleTo (Json::ValueType::${jsonData.getJsonValueType()}) ) {
      throw KurentoException (MARSHALL_ERROR,
                              "'${property.name}' property should be a ${jsonData.getTypeDescription()}");
    }

    s.SerializeNVP (${property.name});

    </#if>
  </#list>
  }
<#else>
  if (s.IsWriter) {
    s.JsonValue = getString();
  } else {
    if (s.JsonValue.isConvertibleTo (Json::ValueType::stringValue) ) {
      enumValue = getValueFromString (s.JsonValue.asString() );
    } else {
      throw KurentoException (MARSHALL_ERROR,
                              "'${complexType.name}' type should be a string");
    }
  }
</#if>
}

void
Serialize (std::shared_ptr<kurento::${complexType.name}> &object, JsonSerializer &s)
{
  if (!s.IsWriter && !object) {
    object.reset (new kurento::${complexType.name}() );
  }

  if (object) {
    object->Serialize (s);
  }
}

} /* kurento */
